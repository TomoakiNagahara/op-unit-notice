
/** op-unit-notice:/notice.css
 *
 * @created   2017-07-31
 * @version   1.0
 * @package   op-unit-notice
 * @author    Tomoaki Nagahara <tomoaki.nagahara@gmail.com>
 * @copyright Tomoaki Nagahara All right reserved.
 */

div.OP_NOTICE {
	font-size: 9pt;
	overflow: scroll;
}

div.OP_NOTICE * {
	font-size: inherit;
}

div.OP_NOTICE > div {
	margin:  0;
	padding: 0;
	margin-top:  0.5em;
	margin-left: 0.5em;
}

div.OP_NOTICE div.headline {
	margin:  0;
	padding: 0;
	padding-left: 0.5em;
	border-left:  0.5em solid black;
}

div.OP_NOTICE div.message {
	margin-top:    0.75em;
	margin-bottom: 0.50em;
}

div.OP_NOTICE div.headline > p,
div.OP_NOTICE div.message  > p {
	margin: 0;
	padding:0;
}

div.OP_NOTICE div.headline > p {
	text-indent: 0;
	font-weight: bold;
	font-size: 125%;
}

div.OP_NOTICE div.message > p {
	font-style: italic;
	font-weight: bold;
}

/*
div.OP_NOTICE td.file {

}
*/

div.OP_NOTICE td.line {
	text-align: right;
}

div.OP_NOTICE td.function {
	white-space: nowrap;
}

div.OP_NOTICE td.function span.args:before {
	content: '(';
}

div.OP_NOTICE td.function span.args:after {
	content: ')';
}

div.OP_NOTICE td.function span.args > span.arg > span.string {
	color: '#999';
}

div.OP_NOTICE td.function span.args > span.arg > span.string:before,
div.OP_NOTICE td.function span.args > span.arg > span.string:after {
	content: '"';
}

/** FOR DESKTOP NOTICE
 *
 */

#OP_NOTICE_AREA {
	position: fixed;
	z-index: 1;
	opacity: 0.9;
}

#OP_NOTICE_AREA > * {
	transition: all 300ms 0s ease;
}

#OP_NOTICE_AREA > div {
	z-index: 1;
	margin:  0.5em;
	padding: 0.5em 1em;
	background: linear-gradient(#000, #444);
	color: white;
	opacity: 0.65;
	border-radius: 0.3em;
}

#OP_NOTICE_AREA > div span {
	font-size: 9pt;
}

#OP_NOTICE_AREA > div.hide {
	height: 0;
	font-size: 0;
	color: #000;
	opacity: 0;
}

span.args > span.arg:not(:last-child):after {
	margin-right: 0.25em;
	content: ',';
}

span.args > span.arg > span.quote:before,
span.args > span.arg > span.quote:after {
	content: '"';
}

span.args > span.arg > span.boolean.true {
	color: var(--root-color-true);
}

span.args > span.arg > span.null,
span.args > span.arg > span.boolean.false {
	color: var(--root-color-false);
}

span.args > span.arg > span.number {
	font-style: italic;
}

span.args > span.arg > span.integer {
	font-style: italic;
}

span.args > span.arg > span.double {
	font-style: italic;
}

span.args > span.arg > span.array {
	color: var(--root-color-purple);
}

span.args > span.arg > span.object {
	color: var(--root-color-purple);
}

span.args > span.arg > span.string {
	color: var(--root-color-text);
}

span.args > span.arg > span.string > span.meta {
	color: var(--args-meta-color);
}

span.args > span.arg > span.string > span.meta.space {
	text-decoration: underline;
}

.OP.Notice {
    color:            var(--color-text);
    background-color: var(--color-back);
    border-color:     var(--color-border);
    border-style:     solid;
    border-width:     1px;
    overflow: scroll;
}

.OP.Notice .message {
    border-left:  0.25rem solid var(--color-border);
    padding-left: 0.25rem;
}

.OP.Notice .table {
    margin-top:  0.1rem;
    margin-left: 0.1rem;
}

.OP.Notice .table td {
    padding: 0.1rem;
    font-size: 80%;
}

.OP.Notice .table td * {
    font-size: inherit;
}

.OP.Notice .table td .args:before {
    content: "(";
}

.OP.Notice .table td .args:after {
    content: ")";
}

.OP.Notice .table td .args .underline {
    color: var(--color-link);
    text-decoration: underline;
}

.OP.Notice .table td .args .arg:not(:last-child):after {
    content: ",";
}

.OP.Notice .table td .args .arg .quote:after {
    content: "\"";
}

.OP.Notice .table td .args .arg .quote:before {
    content: "\"";
}

.OP.Notice .table td .args .arg.number {
	position: relative;
	top: 1px;
}

.OP.Notice .table td .args .arg.number:first-child {
	left: 1px;
}
